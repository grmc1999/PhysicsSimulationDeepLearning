{"model":{
"name":"PINN_vanilla",
"args":{
    "G_expr":"MLP(layers=[3,50,50,50,1],activators=[torch.nn.Tanh(),torch.nn.Tanh(),torch.nn.Tanh(),torch.nn.Identity()])",
    "args_Gen":"{'W_posterior':1.5}",
    "args_PDE_res":"{'R':(lambda u,x:-1*(derivatives(u,x,2)[:,0]+derivatives(u,x,2)[:,1])),'f':(lambda u,x:x[:,0]+x[:,1]),'norm':lambda x:torch.mean(x**2)}",
    "args_PDE_sup":"{'norm':lambda x:torch.mean(x**2)}",
    "distribution_args":"{'mean':torch.tensor([[0.0]]), 'std':torch.tensor([[1.0]])}",
    "weights":"{'generative_posterior_loss':1.0,'generative_entropy_loss':1.0,'PDE_residual_loss':1.0,'PDE_supervised_loss':10.0}"
}
},
"trainer":{
    "trainer_type":"Dual_optimizer_trainer",
    "trainer_args":{
	    "data_path":"Data/2D_poisson_eq_D_N_R_quad_f_Linear_Linear_64x64.csv",
	    "batch_size":1024,
	    "optimizer":"(torch.optim.Adam(self.model.D_model.parameters(),lr=1e-3),torch.optim.Adam(list(self.model.G_model.parameters())+list(self.model.P_model.parameters()),lr=1e-3))",
	    "sub_steps":[1,5],
	    "scope_agent":"generative_losses",
	    "scope_loss":"PDE_supervised_loss"
    }
}

}
